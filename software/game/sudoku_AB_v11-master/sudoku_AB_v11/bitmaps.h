/* Neil Pierson - June 11, 2016
 *
 * bitmaps.h
 *
 * Solve Sudoku Puzzles
 *  http://www.sudoku.com/
 *
 * Complete a 9x9 grid so that every row, column and 3x3 box contains
 * the numbers 1 through 9 (no repeats).
 */
 
// Sudoku-NBP-crop.gif (86x32)
// http://fuopy.github.io/arduboy-image-converter/

#define LOGO_W 86
#define LOGO_H 32

const byte sudokuLogo[] PROGMEM = { // Sudoku - NBP
  0x00, 0x00, 0x00, 0x00, 0x80, 0xf0, 0xf8, 0xfc, 0xfc, 0x9e, 0x8e, 0x8e, 0x0e, 0x1e, 0x3e, 0x0c,
  0x00, 0x80, 0xe0, 0xe0, 0xe0, 0x60, 0x00, 0x00, 0x00, 0x80, 0xe0, 0xe0, 0xe0, 0x60, 0x00, 0x80,
  0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0,
  0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0x00, 0x00, 0x00, 0x80, 0xe0, 0xe0, 0xe0, 0x60,
  0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0x60, 0x20, 0x20, 0x80, 0xe0, 0xe0, 0xe0, 0x60, 0x00, 0x00, 0x00,
  0x80, 0xe0, 0xe0, 0xe0, 0x60, 0x00, 0x00, 0x00, 0xe0, 0xe0, 0xe0, 0xc3, 0xc3, 0xc7, 0xc7, 0xef,
  0xff, 0x7f, 0x3f, 0x0e, 0x00, 0x60, 0xfc, 0xff, 0xff, 0xff, 0xc3, 0xc0, 0xc0, 0xf0, 0xfc, 0x7f,
  0x3f, 0x1f, 0x03, 0xe0, 0xfc, 0xff, 0xff, 0xdf, 0xc3, 0xc0, 0xe0, 0xf0, 0xff, 0x7f, 0x3f, 0x0f,
  0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xc3, 0xc1, 0xe0, 0xf0, 0xff, 0x7f, 0x3f, 0x0f, 0x00, 0xe0,
  0xfc, 0xff, 0xff, 0x1f, 0x7f, 0xff, 0xff, 0xff, 0xe3, 0x01, 0x00, 0x00, 0x60, 0xfc, 0xff, 0xff,
  0xff, 0xc3, 0xc0, 0xc0, 0xf0, 0xfc, 0x7f, 0x3f, 0x1f, 0x03, 0x00, 0x00, 0x0c, 0x0c, 0x0c, 0x0d,
  0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0d, 0x0d, 0x0d,
  0x0d, 0x0d, 0x0d, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d,
  0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0d, 0x8d, 0x8d, 0x8d, 0x0d, 0x0d, 0x0c,
  0x0c, 0x8c, 0x8c, 0x0c, 0x0d, 0x8d, 0x8d, 0x8d, 0x8c, 0x8c, 0x8c, 0x8d, 0x0d, 0x0d, 0x0d, 0x8d,
  0x8c, 0x8c, 0x8c, 0x8c, 0x8d, 0x8d, 0x0d, 0x0d, 0x0d, 0x0d, 0x0c, 0x0c, 0x0c, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0x7f, 0x03, 0x07, 0x0e, 0x1c, 0x78, 0x7f, 0x7f, 0x00, 0x00, 0x7f, 0x7f, 0x44, 0x44, 0x44,
  0x44, 0x7f, 0x3b, 0x00, 0x00, 0x7f, 0x7f, 0x08, 0x08, 0x08, 0x08, 0x0f, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


#define TILE_SZ 7 // 7x7 pixel tiles

const byte num0_bitmap[] PROGMEM =
{
  //        
  //        
  //        
  //        
  //        
  //        
  //        
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

const byte num1_bitmap[] PROGMEM =
{
  //        
  //    #   
  //   ##   
  //    #   
  //    #   
  //    #   
  //        
  0x00, 0x00, 0x04, 0x3E, 0x00, 0x00, 0x00 
};

const byte num2_bitmap[] PROGMEM =
{
  //        
  //   ###  
  //  #   # 
  //     #  
  //    #   
  //  ##### 
  //        
  0x00, 0x24, 0x22, 0x32, 0x2A, 0x24, 0x00 
};

const byte num3_bitmap[] PROGMEM =
{
  //        
  //   ###  
  //      # 
  //    ##  
  //      # 
  //   ###  
  //        
  0x00, 0x00, 0x22, 0x2A, 0x2A, 0x14, 0x00 
};

const byte num4_bitmap[] PROGMEM =
{
  //        
  //    ##  
  //   # #  
  //  #  #  
  //  ##### 
  //     #  
  //        
  0x00, 0x18, 0x14, 0x12, 0x3E, 0x10, 0x00 
};

const byte num5_bitmap[] PROGMEM =
{
  //        
  //  ##### 
  //  #     
  //  ####  
  //      # 
  //  ####  
  //        
  0x00, 0x2E, 0x2A, 0x2A, 0x2A, 0x12, 0x00 
};

const byte num6_bitmap[] PROGMEM =
{
  //        
  //   ###  
  //  #     
  //  ####  
  //  #   # 
  //   ###  
  //        
  0x00, 0x1C, 0x2A, 0x2A, 0x2A, 0x10, 0x00 
};

const byte num7_bitmap[] PROGMEM =
{
  //        
  //  ##### 
  //     #  
  //    #   
  //    #   
  //    #   
  //        
  0x00, 0x02, 0x02, 0x3A, 0x06, 0x02, 0x00 
};

const byte num8_bitmap[] PROGMEM =
{
  //        
  //   ###  
  //  #   # 
  //   ###  
  //  #   # 
  //   ###  
  //        
  0x00, 0x14, 0x2A, 0x2A, 0x2A, 0x14, 0x00 
};

const byte num9_bitmap[] PROGMEM =
{
  //        
  //   #### 
  //   #  # 
  //   #### 
  //      # 
  //      # 
  //        
  0x00, 0x00, 0x0E, 0x0A, 0x0A, 0x3E, 0x00 
};

const byte *num_bitmaps[] = { num0_bitmap, num1_bitmap, num2_bitmap, num3_bitmap, num4_bitmap, 
                              num5_bitmap, num6_bitmap, num7_bitmap, num8_bitmap, num9_bitmap
                            };
